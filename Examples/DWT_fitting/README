This directory contains input files, parameter file for running the program responsible for fitting the DWT model. It is
assumed that the dependencies are compiled as reside in their directories, as well as the Python code is properly running.
For more information, see the ''../../manual.txt'' file.


Input files:
------------
CEBPB.wm =  Position-specific weight matrix (PSWM) file for CEBPB.

CEBPB.fasta = A set of DNA sequences that are provided in the FASTA format. These sequences have been obtained from the
              ENCODE ChIP-seq experiment for CEBPB. This WM is obtained from the SwissRegulon database.

BHLHE.wm = A PSWM file for BHLHE. The PSWM file is obtained from the SwissRegulon database.

BHLHE.fasta = A set of DNA sequences that are provided in the FASTA format. These sequences have been obtained from the
              ENCODE ChIP-seq experiment for BHLHE.


Example 1
---------
It is supposed that the Python script fitting_DWT_model.py is placed in the Source directory, located at:
'../../Source/'. For running this example, execute the following command:

/usr/local/bin/python ../../Source/fitting_DWT_model.py -w CEBPB.wm -f CEBPB.fasta -o CEBPB -t CEBPB -b -v

Note that, any other path for Python can be replaced instead of /usr/local/bin/python. The above example, runs the prog-
ram for a set of FASTA sequences that are stored in the CEBPB.fasta file, and uses an initial PSWM model which is  given
by CEBPB.wm. The output of the  program is stored in a directory which is called CEBPB. As specified by using the option
-b, we  are using a random  background model  for nucleotide frequencies that is fitted to the input DNA sequences. This
background nucleotide model is used for calculating the  PSWM and DWT scores. The name  of the TF is explicitly given by
the -t option, even though that is an optional parameter. Finally, we are running the program in the verbose mode as sp-
ecified by the -v option). Upon running the above command, following output should appear on the screen:

number of identified TFBS in iteration 1 is 177
*****************************
difference at round 2 is 0.717168
number of identified TFBS in this iteration is 117
*****************************
difference at round 3 is 0.335371
number of identified TFBS in this iteration is 137
*****************************
difference at round 4 is 0.202874
number of identified TFBS in this iteration is 139
*****************************
difference at round 5 is 0.724819
number of identified TFBS in this iteration is 137
*****************************
difference at round 6 is 0.332922
number of identified TFBS in this iteration is 137
*****************************
difference at round 7 is 0.101635
number of identified TFBS in this iteration is 136
*****************************
difference at round 8 is 0.333072
number of identified TFBS in this iteration is 136
*****************************
difference at round 9 is 0.721899
number of identified TFBS in this iteration is 135
*****************************
difference at round 10 is 0.107464
number of identified TFBS in this iteration is 135
*****************************
difference at round 11 is 0.845778
number of identified TFBS in this iteration is 134
*****************************
difference at round 12 is 0.047266
number of identified TFBS in this iteration is 134
*****************************
difference at round 13 is 0.021940
number of identified TFBS in this iteration is 134
*****************************
difference at round 14 is 0.009278
number of identified TFBS in this iteration is 134
*****************************


First line shows how many TF binding sites (TFBSs) are being identified after using the input PSWM model. Since the min-
imum posterior parameter is not given, it is assumed by default a minimum posterior of 0.5. Following that, a DWT model
is built on the selected TFBSs, and it is used for identifying new TFBSs. In the second round a set containing 117 TFBS
were identified. We are comparing the dinucleotide frequency matrix of the two consequent rounds as a measure for conve-
rgence. The iteration is converged if the distance between the two dinucleotide matrices are smaller than 0.05. This pr-
ocedure continues iteratively  until 14th iteration where the distance is 0.009278 (below <0.05). At the final iteration
134 TFBS were identified and stored in the CEBPB.alg in the CEBPB directory.


output files are stored in CEBPB directory as includes:
    CEBPB.dwt: Storing the fitted DWT model for CEBPB.
    CEBPB.alg: Set of 134 identified TFBSs. At each line a TFBS and its posterior probability.
    CEBPB.pdf: diLogo plot for the final DWT model.
    CEBPB.post: Posterior probability of positional dependency between all pairs of positions.
    intermediate_results: This directory contains intermediate files that were produced while running the program, incl-
    uding DWT models and identified TFBSs at each round of iteration.


Example 2
---------
It is supposed that the Python script fitting_DWT_model.py is placed in the Source directory, located at:
'../../Source/'. For running this example, execute the following command:

/usr/local/bin/python ../../Source/fitting_DWT_model.py -w BHLHE.wm -f BHLHE.fasta -o BHLHE -p 0.3 -v

In this example, we run the program for a set of FASTA sequences that are stored in the BHLHE.fasta file, and use an in-
itial PSWM model given by BHLHE.wm. The output of the program is stored in a directory which is called BHLHE. Here we a-
re explicitly specified 0.3 as the minimum posterior (option -p)  for selecting TFBSs.  Since we did not use  option -b,
background nucleotide frequency is set to a uniform distribution for all bases. Finally,  we are running the  program in
verbose mode (-v option). Upon running the above command, following output should appear on the screen:


number of identified TFBS in iteration 1 is 1231
*****************************
difference at round 2 is 0.415508
number of identified TFBS in this iteration is 999
*****************************
difference at round 3 is 0.220662
number of identified TFBS in this iteration is 1171
*****************************
difference at round 4 is 0.041347
number of identified TFBS in this iteration is 1225
*****************************
difference at round 5 is 0.063144
number of identified TFBS in this iteration is 1307
*****************************
difference at round 6 is 0.057342
number of identified TFBS in this iteration is 1402
*****************************
difference at round 7 is 0.036933
number of identified TFBS in this iteration is 1469
*****************************
difference at round 8 is 0.039666
number of identified TFBS in this iteration is 1568
*****************************
difference at round 9 is 0.010597
number of identified TFBS in this iteration is 1675
*****************************
difference at round 10 is 0.033256
number of identified TFBS in this iteration is 1843
*****************************
difference at round 11 is 0.139190
number of identified TFBS in this iteration is 2050
*****************************
difference at round 12 is 0.033344
number of identified TFBS in this iteration is 2330
*****************************
difference at round 13 is 0.073715
number of identified TFBS in this iteration is 2750
*****************************
difference at round 14 is 0.079776
number of identified TFBS in this iteration is 3079
*****************************
difference at round 15 is 0.007437
number of identified TFBS in this iteration is 3268
*****************************


The output log shows the number of the predicted TFBSs at each iteration of the fitting. In addition, it shows at each
iteration the distance of a dinucleotide matrix from the currently predicted TFBSs and the previous set. Upon convergence
(distance < 0.05), the program stops and the results will be stored in BHLHE directory.

output files in BHLHE directory:
    BHLHE.dwt: DWT flat file for BHLHE.
    BHLHE.alg: Set of 3268 identified TFBSs. At each line a TFBS and its posterior probability.
    BHLHE.pdf: diLogo plot for the final DWT model.
    BHLHE.post: Posterior probability of positional dependency between all pairs of positions.
    intermediate_results: This directory contains intermediate files that were produced while
                          running the program, including DWT models and identified TFBSs at
                          each iterations.



